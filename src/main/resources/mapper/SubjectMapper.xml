<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.dlu.bysj.common.mapper.SubjectMapper">

    <!-- adminApprovalListPagination该查询结果集映射   -->
    <resultMap id="adminApprovalMap" type="edu.dlu.bysj.base.model.dto.AdminApprovalConvey">
        <id column="id" property="id"/>
        <result column="subject_name" property="subjectName"/>
        <result column="subject_id" property="subjectId"/>
        <result column="first_teacher_id" property="firstTeacherId"/>
        <result column="second_teacher_id" property="secondTeacherId"/>
        <result column="student_id" property="studentId"/>
        <result column="filing_number" property="fillingNumber"/>
        <result column="content" property="progress"/>
    </resultMap>

    <resultMap id="entrustSubjectMap" type="edu.dlu.bysj.base.model.vo.EntrustInfoVo">
        <id column="id" property="subjectId"/>
        <result column="subject_name" property="subjectName"/>
        <result column="teacherName" property="firstTeacherName"/>
        <result column="titleName" property="firstTeacherTitle"/>
        <result column="studentName" property="studentName"/>
        <result column="student_number" property="studentNumber"/>
        <result column="phone_number" property="studentPhone"/>
        <result column="content" property="progress"/>
        <result column="filing_number" property="fillingNumber"/>

    </resultMap>

    <resultMap id="studentSelectSubjectMap" type="edu.dlu.bysj.base.model.vo.TopicsVo">
        <id column="id" property="subjectId"/>
        <result column="subject_name" property="subjectName"/>
        <result column="teacherName" property="firstTeacherName"/>
        <result column="titleName" property="title"/>
    </resultMap>

    <resultMap id="SureSelectedMap" type="edu.dlu.bysj.base.model.vo.DetermineStudentVo">
        <id column="id" property="subjectId"/>
        <result column="subject_name" property="subjectName"/>
        <result column="studentName" property="studentName"/>
        <result column="student_number" property="studentNumber"/>
        <result column="phone_number" property="studentPhone"/>
        <result column="majorName" property="studentMajor"/>
        <result column="className" property="studentClass"/>
        <result column="content" property="progress"/>
    </resultMap>

    <resultMap id="topicSelectStatics" type="edu.dlu.bysj.document.entity.ReportStaticsTemplate">
        <result column="subject_name" property="topicName"/>
        <result column="studentName" property="studentName"/>
        <result column="className" property="className"/>
        <result column="guidName" property="guideName"/>
        <result column="sourceName" property="topicSource"/>
        <result column="typeName" property="topicType"/>
        <result column="title_abstract" property="content"/>
        <result column="necessity" property="necessity"/>
        <result column="feasibility" property="feasiblity"/>
    </resultMap>

    <resultMap id="paperCoverMap" type="edu.dlu.bysj.document.entity.PaperCoverTemplate">
        <result column="subject_name" property="subjectTitle"/>
        <result column="studentName" property="studentName"/>
        <result column="student_number" property="studentNumber"/>
        <result column="name" property="className"/>
        <result column="grade" property="grade"/>
        <result column="guideName" property="guideTeacherName"/>
        <result column="collegeName" property="collegeName"/>
    </resultMap>

    <update id="removeSubjectById">
        UPDATE subject SET status=0 WHERE subject_id=#{subjectId} AND status=1
    </update>

    <select id="subjectSimplifyInfo" resultType="edu.dlu.bysj.base.model.vo.SubjectSimplifyVo">
        select s.student_id as subjectId, s.subject_name as subjectName, p.content as progress
        from (select subject.student_id, subject.subject_name, subject.progress_id
              from subject
              where subject.student_id = #{studentId}) as s
                 inner join progress as p
                            on p.id = s.progress_id
    </select>

    <select id="subjectListByMajorId" resultType="edu.dlu.bysj.base.model.vo.ApprovalTaskBookVo">
        <choose>
            <when test="userNumber != null and userNumber != '' ">
                <bind name="pattern_userNumber" value="'%'+userNumber+ '%'"/>
            </when>
        </choose>

        <choose>
            <when test="userName != null and userName != ''">
                <bind name="pattern_userName" value="'%'+userName+'%'"/>
            </when>
        </choose>

        select t.id as subjectId,
        t.subject_name as subjectName,
        t2.name as firstName,
        t3.name as firstTitle,
        s.student_number as studentNumber,
        s.name as studentName,
        s.phone_number as studentPhone,
        p.content as progress
        from (select subject.id, subject.subject_name, subject.first_teacher_id, subject.student_id,
        subject.progress_id, subject.grade
        from subject
        where subject.status = 1 and subject.major_id = #{majorId}) as t

        inner join student as s
        on s.id = t.student_id

        inner join progress as p
        on p.id = t.progress_id

        inner join teacher as t2
        on t2.id = t.first_teacher_id

        inner join teacher_title as t3
        on t3.id = t2.title_id
        <choose>
            <when test="type  != 1">
                <where>
                    <if test="userName != null and userName != ''">
                        s.name like #{pattern_userName}
                    </if>
                    <if test="userNumber != null and userNumber != ''">
                        and s.student_number like #{pattern_userNumber}
                    </if>
                    <if test="year != null and year != ''">
                        and t.grade = #{year}
                    </if>
                </where>
            </when>

            <otherwise>
                <where>
                    <if test="userName != null and userName != ''">
                        t2.name like #{pattern_userName}
                    </if>
                    <if test="userNumber != null and userNumber != ''">
                        and t2.teacher_number like #{pattern_userNumber}
                    </if>

                    <if test="year != null and year != ''">
                        and t.grade = #{year}
                    </if>
                </where>
            </otherwise>

        </choose>
        limit #{pageNumber}, #{pageSize}
    </select>

    <select id="totalSubjectListByMajorId" resultType="java.lang.Integer">
        <choose>
            <when test="userNumber != null and userNumber != '' ">
                <bind name="pattern_userNumber" value="'%'+userNumber+ '%'"/>
            </when>
        </choose>

        <choose>
            <when test="userName != null and userName != ''">
                <bind name="pattern_userName" value="'%'+userName+'%'"/>
            </when>
        </choose>

        select count(*) as total
        from (select subject.id, subject.subject_name, subject.first_teacher_id, subject.student_id,
        subject.progress_id, subject.grade
        from subject
        where subject.status = 1 and subject.major_id = #{majorId}) as t

        inner join student as s
        on s.id = t.student_id

        inner join progress as p
        on p.id = t.progress_id

        inner join teacher as t2
        on t2.id = t.first_teacher_id

        inner join teacher_title as t3
        on t3.id = t2.title_id
        <choose>
            <when test="type  != 1">
                <where>
                    <if test="userName != null and userName != ''">
                        s.name like #{pattern_userName}
                    </if>
                    <if test="userNumber != null and userNumber != ''">
                        and s.student_number like #{pattern_userNumber}
                    </if>
                    <if test="year != null and year != ''">
                        and t.grade = #{year}
                    </if>
                </where>
            </when>

            <otherwise>
                <where>
                    <if test="userName != null and userName != ''">
                        t2.name like #{pattern_userName}
                    </if>
                    <if test="userNumber != null and userNumber != ''">
                        and t2.teacher_number like #{pattern_userNumber}
                    </if>

                    <if test="year != null and year != ''">
                        and t.grade = #{year}
                    </if>
                </where>
            </otherwise>

        </choose>
    </select>

    <select id="teacherSubjectListByTeacherIdAndGrade" resultType="edu.dlu.bysj.base.model.vo.SubjectDetailVo">
        select s.id,
               s.subjectId,
               s.subject_name   as subjectName,
               progress.content as progress,
               grade,
               s.student_id     as studentId,
               t.name as firstTeacherName,
               t.phone_number as firstTeacherPhone,
               (sc.first_quality+sc.first_ability+sc.first_complete) as teacherScore,
               (sc.other_quality+sc.other_complete+sc.other_ability) as otherScore,
               (sc.total_ability+sc.total_complete_quality+sc.total_process+sc.total_quality+sc.total_self_summary) as defenceScore,
               (sc.process_attitude+sc.process_discipline+sc.process_report+sc.process_complete) as processScore

        from (select subject.id,subject.subject_id as subjectId, subject.subject_name, subject.grade, subject.progress_id, subject.student_id
              from subject
              where subject.status = 1
                and subject.first_teacher_id = #{teacherId}
                and grade = #{grade}) as s

                 left join progress
                           on progress.id = s.progress_id
                 left join teacher as t
                           on t.id = #{teacherId}
                 left join score sc
                           on sc.subject_id = s.id

        limit #{start} ,#{pageSize}
    </select>

    <select id="totalSubjectListByTeacher" resultType="java.lang.Integer">
        select count(s.id) as total
        from (select subject.id, subject.subject_name, subject.grade, subject.progress_id
              from subject
              where subject.status = 1
                and subject.first_teacher_id = #{teacherId}
                and grade = #{grade}) as s

                 left join progress
                           on progress.id = s.progress_id
    </select>

    <select id="adminApprovalListPagination" resultMap="adminApprovalMap">
        select
        s.id,
        s.student_id,
        s.subject_id,
        s.subject_name,
        s.first_teacher_id,
        s.second_teacher_id,
        s.student_id,
        s.filing_number,
        progress.content

        from (
        select
        subject.id,
        subject.subject_id,
        subject.subject_name,
        subject.first_teacher_id,
        subject.second_teacher_id,
        subject.progress_id,
        subject.student_id,
        subject.filing_number
        from subject
        where subject.status = 1
        <if test="teacherId != null">
            and subject.first_teacher_id = 1
        </if>
        and grade = #{grade}

        and subject.subject_id in

        (select subject_major.subject_id
        from subject_major
        where subject_major.major_id = #{majorId})) as s

        left join progress

        on progress.id = s.progress_id

        limit #{start} , #{pageSize}
    </select>

    <select id="totalAdminCollegeApprovalList" resultType="java.lang.Integer">
        select count(ss.id) as total
        from(
            select
            s.id
            from (
            select
            subject.id,
            subject.subject_id,
            subject.subject_name,
            subject.first_teacher_id,
            subject.second_teacher_id,
            subject.progress_id,
            subject.student_id,
            subject.filing_number
            from subject
            <choose>
                <when test="searchContent != ''">
                    where subject.first_teacher_id in (
                    select id from teacher t
                    where
                    t.teacher_number like #{searchContent} or
                    t.name like #{searchContent}
                    )
                    and subject.status = 1
                </when>
                <when test="teacherId != null">
                    where subject.first_teacher_id = #{teacherId}
                    and subject.status = 1
                </when>
            </choose>
            <if test="searchContent == '' and teacherId == null">
                where subject.status = 1
            </if>
            and grade = #{year}
            and subject.subject_id in (
            select subject_major.subject_id
            from subject_major
            where subject_major.major_id = #{majorId}
            )
            ) as s
            left join progress
            on progress.id = s.progress_id
        ) as ss
    </select>

    <select id="entrustSubjectPagination" resultMap="entrustSubjectMap">
        select s.id,
        s.subject_name,
        teacher.name as teacherName,
        t.name as titleName,
        student.name as studentName,
        student.student_number,
        student.phone_number,
        progress.content,
        s.filing_number

        from (select
        subject.subject_id as id,
        subject.subject_name,
        subject.first_teacher_id,
        subject.student_id,
        subject.filing_number,
        subject.progress_id
        from subject
        where subject.status = 1
        <if test="subjectIds != null and subjectIds.size > 0">
            and subject.id in
            <foreach collection="subjectIds" item="value" open="(" separator="," close=")">
                #{value}
            </foreach>
        </if>

        <if test="subjectIds == null  or subjectIds.size == 0 ">
            # 应对List、集合为空foreach不不执行问题
            and subject.id in(null)
        </if>

        ) as s

        left join teacher
        on teacher.id = s.first_teacher_id

        left join student
        on student.id = s.student_id

        left join progress
        on progress.id = s.progress_id

        left join teacher_title t
        on teacher.title_id = t.id

        limit #{start} ,#{pageSize}

    </select>

    <select id="totalEntrustSubject" resultType="java.lang.Integer">
        select count( subject.id) as total
        from subject
        where subject.status = 1
        <if test="subjectIds != null and subjectIds.size > 0">
            and subject.id in
            <foreach collection="subjectIds" item="value" open="(" separator="," close=")">
                #{value}
            </foreach>
        </if>

        <if test="subjectIds == null  or subjectIds.size == 0 ">
            # 应对List、集合为空foreach不不执行问题
            and subject.id in(null)
        </if>

    </select>

    <select id="studentSelectSubject" resultMap="studentSelectSubjectMap">
        <choose>
            <when test="teacherName != null and teacherName != ''">
                <bind name="teacherName_pattern" value="'%'+teacherName+'%'"/>
            </when>
        </choose>

        <choose>
            <when test="subjectName != null and subjectName != ''">
                <bind name="subjectName_pattern" value="'%'+subjectName+'%'"/>
            </when>
        </choose>

        select
               s.id,
               s.subject_name,
               teacher.name as teacherName,
               t.name as titleName
        from (
            select
                   subject.id,
                   subject.subject_name,
                   subject.first_teacher_id
            from subject
            left join
                subject_major sm on sm.subject_id = subject.subject_id
            where subject.status = 1
            and sm.major_id = #{majorId}
            and subject.grade = #{grade}
            and subject.progress_id = 3
        ) as s

        left join teacher
        on teacher.id = s.first_teacher_id
        left join teacher_title t
        on teacher.title_id = t.id
        <where>
            <if test="teacherName != null and teacherName != '' ">
                teacher.name like #{teacherName_pattern}
            </if>
            <if test="subjectName != null and subjectName != '' ">
                and s.subject_name like #{subjectName_pattern}
            </if>
        </where>

        limit #{start}, #{pageSize}
    </select>

    <select id="totalStudentSelectSubject" resultType="java.lang.Integer">

        <choose>
            <when test="teacherName != null and teacherName != ''">
                <bind name="teacherName_pattern" value="'%'+teacherName+'%'"/>
            </when>
        </choose>

        <choose>
            <when test="subjectName != null and subjectName != ''">
                <bind name="subjectName_pattern" value="'%'+subjectName+'%'"/>
            </when>
        </choose>

        select count(s.id)

        from
        (select subject.id, subject.first_teacher_id,subject.subject_name
        from subject
        where subject.status = 1
        and subject.progress_id = 3
        and subject.major_id = #{majorId}
        and subject.grade = #{grade}) as s

        left join teacher
        on teacher.id = s.first_teacher_id

        <where>
            <if test="teacherName != null and teacherName != '' ">
                teacher.name like #{teacherName_pattern}
            </if>
            <if test="subjectName != null and subjectName != '' ">
                and s.subject_name like #{subjectName_pattern}
            </if>
        </where>

    </select>

    <select id="determinStudentSubject" resultMap="SureSelectedMap">
        select s.id,
               s.subject_name,
               student.name as studentName,
               student.student_number,
               student.phone_number,
               m.name       as majorName,
               c.name       as className,
               p.content
        from (select subject.id, subject.subject_name, subject.student_id, subject.progress_id
              from subject
              where subject.status = 1
                and subject.first_teacher_id = #{teacherId}
                and subject.grade = #{grade}
                and subject.student_id is not null)
                 as s

                 left join student
                           on student.id = s.student_id

                 left join major m
                           on student.major_id = m.id
                 left join class c
                           on student.class_id = c.id

                 left join progress p
                           on p.id = s.progress_id
        limit #{start}, #{pageSize}
    </select>

    <select id="totalDeterminestudentSubject" resultType="java.lang.Integer">
        select count(subject.id) as totoal
        from subject
        where subject.status = 1
          and subject.first_teacher_id = #{teacherId}
          and subject.grade = #{grade}
          and subject.student_id is not null
    </select>

    <select id="selectPaperCoverInfo" resultMap="paperCoverMap">
        select subject.subject_name,
               subject.grade,
               student.name as studentName,
               student.student_number,
               class.name,
               teacher.name as guideName,
               college.name as collegeName

        from subject
                 inner join student
                            on subject.student_id = student.id
                 inner join teacher
                            on subject.first_teacher_id = teacher.id
                 inner join class
                            on student.class_id = class.id
                 inner join major
                            on student.major_id = major.id
                 inner join college
                            on major.college_id = college.id
        where subject.status = 1
          and student.status = 1
          and teacher.status = 1
          and class.status = 1
          and student.major_id = #{majorId}
    </select>

    <select id="selectAllReportStaticsByMajorId"
            resultMap="topicSelectStatics">

        select s.subject_name,
               student.name      as studentName,
               class.name        as className,
               teacher.name      as guidName,
               source.name       as sourceName,
               subject_type.name as typeName,
               s.title_abstract,
               s.necessity,
               s.feasibility

        from (select subject.id,
                     subject.subject_name,
                     subject.student_id,
                     subject.first_teacher_id,
                     subject.subject_type_id,
                     subject.source_id,
                     subject.title_abstract,
                     subject.necessity,
                     subject.feasibility
              from subject
              where subject.major_id = #{majorId}) as s

                 left join student
                            on s.student_id = student.id

                 left join class
                            on student.class_id = class.id

                 left join teacher
                            on s.first_teacher_id = teacher.id

                 left join source
                            on s.source_id = source.id

                 left join subject_type
                            on s.subject_type_id = subject_type.id

--                  inner join student
--                            on s.student_id = student.id
--
--                  inner join class
--                            on student.class_id = class.id
--
--                  inner join teacher
--                            on s.first_teacher_id = teacher.id
--
--                  inner join source
--                            on s.source_id = source.id
--
--                  inner join subject_type
--                            on s.subject_type_id = subject_type.id


    </select>

    <select id="selectBySubjectId" resultType="edu.dlu.bysj.base.model.entity.Subject">
        select * from subject where subject_id = #{subjectId}
    </select>

    <select id="listBySubjectIds" resultType="edu.dlu.bysj.base.model.entity.Subject">
        select * from subject where subject_id = #{id1} or subject_id = #{id2}
    </select>

    <select id="listSubjectByIds" resultType="edu.dlu.bysj.base.model.entity.Subject">
        select * from subject where id = #{id1} or id = #{id2}
    </select>

    <select id="adminSubjectListByMajorIdAndGrade" resultType="edu.dlu.bysj.base.model.vo.SubjectDetailVo">

        select s.id,
               s.subjectId,
               s.subject_name   as subjectName,
               progress.content as progress,
               grade,
               s.student_id     as studentId,
               t1.name as firstTeacherName,
               t1.phone_number as firstTeacherPhone,
               t2.name as secondTeacherName,
               t2.phone_number as secondTeacherPhone
        from (
              select subject.id,
                     subject.first_teacher_id as firstTeacherId,
                     subject.second_teacher_id as secondTeacherId,
                     subject.subject_id as subjectId,
                     subject.subject_name,
                     subject.grade,
                     subject.progress_id,
                     subject.student_id
              from subject
              where subject.status = 1
                and subject.major_id = #{majorId}
                and grade = #{grade}) as s

                 left join progress
                           on progress.id = s.progress_id
                 left join teacher as t1
                           on t1.id = s.firstTeacherId
                 left join teacher as t2
                           on t2.id = s.secondTeacherId


        limit #{start} ,#{pageSize}

    </select>

    <select id="totalSubjectListByMajor" resultType="java.lang.Integer">
        select count(s.id) as total
        from (select subject.id, subject.subject_name, subject.grade, subject.progress_id
              from subject
              where subject.status = 1
                and subject.major_id = #{majorId}
                and grade = #{grade}) as s

                 left join progress
                           on progress.id = s.progress_id
    </select>

    <select id="studentSubjectListByStudentIdAndGrade" resultType="edu.dlu.bysj.base.model.vo.SubjectDetailVo">
        select
        s.id,
        s.subjectId,
        s.subject_name   as subjectName,
        progress.content as progress,
        grade,
        s.student_id     as studentId,
        t.id             as firstTeacherId,
        t.name           as firstTeacherName,
        t.phone_number   as firstTeacherPhone,
        (sc.first_quality+sc.first_ability+sc.first_complete) as teacherScore,
        (sc.other_quality+sc.other_complete+sc.other_ability) as otherScore,
        (sc.process_attitude+sc.process_discipline+sc.process_report+sc.process_complete) as processScore,
        (sc.total_ability+sc.total_complete_quality+sc.total_process+sc.total_quality+sc.total_self_summary) as defenceScore


        from (select subject.id,
                     subject.subject_id as subjectId,
                     subject.subject_name,
                     subject.grade,
                     subject.first_teacher_id,
                     subject.progress_id,
                     subject.student_id
              from subject
              where subject.status = 1
                and subject.student_id = #{studentId}
                and grade = #{grade}) as s

                left join progress
                          on progress.id = s.progress_id
                left join teacher as t
                          on t.id = s.first_teacher_id
                left join score sc
                          on sc.subject_id = s.id

        limit #{start} ,#{pageSize}
    </select>

    <select id="totalSubjectListByStudent" resultType="java.lang.Integer">
        select count(s.id) as total
        from (select subject.id, subject.subject_name, subject.grade, subject.progress_id
              from subject
              where subject.status = 1
                and subject.student_id = #{userId}
                and grade = #{year}) as s
                 left join progress
                           on progress.id = s.progress_id
    </select>

    <select id="approvalListPagination" resultType="edu.dlu.bysj.base.model.dto.AdminApprovalConvey">
        select
        s.id                as id,
        s.student_id        as studentId,
        s.subject_id        as subjectId,
        s.subject_name      as subjectName,
        s.first_teacher_id  as firstTeacherId,
        s.second_teacher_id as secondTeacherId,
        s.student_id        as studentId,
        s.filing_number     as fillingNumber,
        progress.content    as progress
        from (
            select
            subject.id,
            subject.subject_id,
            subject.subject_name,
            subject.first_teacher_id,
            subject.second_teacher_id,
            subject.progress_id,
            subject.student_id,
            subject.filing_number
            from subject
            <choose>
                <when test="searchContent != ''">
                  where subject.first_teacher_id in (
                    select id from teacher t
                    where
                      t.teacher_number like #{searchContent} or
                      t.name like #{searchContent}
                    )
                    and subject.status = 1
                </when>
                <when test="teacherId != null">
                    where subject.first_teacher_id = #{teacherId}
                    and subject.status = 1
                </when>
            </choose>
            <if test="searchContent == '' and teacherId == null">
                where subject.status = 1
            </if>
            and grade = #{year}
            and subject.subject_id in (
                select subject_major.subject_id
                from subject_major
                where subject_major.major_id = #{majorId}
            )
        ) as s
        left join progress
        on progress.id = s.progress_id
        limit #{start} , #{pageSize}
    </select>

    <select id="totalAdminMajorApprovalList" resultType="java.lang.Integer">
        select count(ss.id) as total
        from(
            select s.id
            from (
                select subject.id, subject.subject_id, subject.subject_name,
                subject.first_teacher_id, subject.second_teacher_id, subject.progress_id,
                subject.student_id, subject.filing_number
                from subject
                where
                subject.status = 1
                <if test="teacherId != null">
                    and subject.first_teacher_id = #{teacherId}
                </if>
                and grade = #{grade}
                and subject.subject_id in (
                    select subject_major.subject_id
                    from subject_major
                    where subject_major.major_id = #{majorId}
                )
            ) as s
            left join progress on progress.id = s.progress_id
        ) as ss
    </select>

    <select id="getIdsByMajor" resultType="java.lang.Integer">
        select id from subject where major_id = #{majorId}
    </select>
    <select id="filterByYear" resultType="edu.dlu.bysj.base.model.vo.SubjectDetailVo">
        select
        s.id as id,
        s.subject_id as subjectId,
        s.subject_name as subjectname,
        st.name as studentName,
        p.content as progress,
        (sc.other_ability+sc.other_complete+sc.other_quality) as otherScore
        from subject s
        left join student st on st.id=s.student_id
        left join progress p on p.id=s.progress_id
        left join score sc on sc.subject_id=s.id
        where s.id in
        <foreach collection="idList" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
        and s.grade=#{year}
        limit #{start}, #{pageSize}
    </select>
    <select id="totalFilterByYear" resultType="java.lang.Integer">
        select count(*) from (
            select
            s.id as id
            from subject s
            left join student st on st.id=s.student_id
            left join progress p on p.id=s.progress_id
            left join score sc on sc.subject_id=s.id
            where s.id in
            <foreach collection="idList" open="(" separator="," close=")" item="id">
                #{id}
            </foreach>
            and s.grade=#{year}
        ) s
    </select>
    <select id="selectAllSelectStaticsByMajorId"
            resultType="edu.dlu.bysj.document.entity.SelectStaticsTemplate">

        select s.subject_name    as topicName,
               student.name      as studentName,
               class.name        as className,
               teacher.name      as guideName,
               title.name        as guideTitle,
               source.name       as sourceName,
               subject_type.name as typeName,
               s.filing_number   as fillingNumber
        from (select subject.id,
                     subject.subject_name,
                     subject.student_id,
                     subject.first_teacher_id,
                     subject.subject_type_id,
                     subject.source_id,
                     subject.filing_number
              from subject
              where subject.major_id = #{majorId} and subject.student_id is not null) as s

                 left join student
                           on s.student_id = student.id

                 left join class
                           on student.class_id = class.id

                 left join teacher
                           on s.first_teacher_id = teacher.id
                 left join teacher_title title
                           on title.id = teacher.title_id

                 left join source
                           on s.source_id = source.id

                 left join subject_type
                           on s.subject_type_id = subject_type.id


    </select>
    <select id="selectAnalysisCount" resultType="edu.dlu.bysj.document.entity.SubjectSelectAnalysis">
        SELECT
            SUM(
                    IF(
                            subject.subject_type_id=3,1,0
                        )
                ) AS gcsj,
            SUM(
                    IF(
                            subject.subject_type_id=2,1,0
                        )
                ) AS kxsy,
            SUM(
                    IF(
                            subject.subject_type_id=1,1,0
                        )
                ) AS rjkf,
            SUM(
                    IF(
                            subject.subject_type_id=4,1,0
                        )
                ) AS llyj,
            SUM(
                    IF(
                            subject.subject_type_id=5,1,0
                        )
                ) AS zh1,
            SUM(
                    IF(
                            subject.subject_type_id=10,1,0
                        )
                ) AS qt1,
            SUM(
                    IF(
                            subject.subject_type_id=6,1,0
                        )
                ) AS llxyj,
            SUM(
                    IF(
                            subject.subject_type_id=7,1,0
                        )
                ) AS yyxyj,
            SUM(
                    IF(
                            subject.subject_type_id=8,1,0
                        )
                ) AS yyrjsj,
            SUM(
                    IF(
                            subject.subject_type_id=9,1,0
                        )
                ) AS dcbg,
            SUM(
                    IF(
                            subject.subject_type_id=10,1,0
                        )
                ) AS zh2,
            SUM(
                    IF(
                            subject.subject_type_id=11,1,0
                        )
                ) AS qt2,
            SUM(
                    IF(
                            subject.first_teacher_id IS NOT NULL,1,0
                        )
                ) AS guideTotal
        FROM
            subject
        WHERE subject.major_id = #{majorId} AND subject.grade = #{grade} and subject.student_id is not null and subject.first_teacher_id is not null
    </select>

</mapper>
